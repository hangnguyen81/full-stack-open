{"version":3,"sources":["components/SearchBar.js","components/Contact.js","components/AddContact.js","services/contacts.js","components/Notification.js","App.js","index.js"],"names":["SearchBar","props","type","onChange","placeholder","Contact","contact","deleteContact","firstName","lastName","number","onClick","AddContact","fname","lname","num","onSubmit","handleFname","handleLname","handleNumber","className","autoComplete","value","name","baseUrl","axios","get","then","res","data","newObj","post","id","delete","newContact","put","Notification","notification","message","App","useState","contacts","setContacts","displayContacts","setDisplayContacts","setFirstName","setLastName","setNumber","setNotification","useEffect","contactsService","initialContacts","resetForm","notifyText","setTimeout","event","preventDefault","window","alert","found","find","confirm","returnedContact","updatedContacts","map","returnedContacts","catch","error","response","target","searchQuery","toLowerCase","filter","includes","DeletedContact","afterDeleteContacts","deleteContactOf","length","ReactDOM","render","document","getElementById"],"mappings":"qLASeA,EATG,SAACC,GACf,OACI,uBACIC,KAAK,OACLC,SAAYF,EAAME,SAClBC,YAAc,oBCMXC,EAVC,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,cACzB,OACE,+BACE,+BAAKD,EAAQE,UAAb,IAAyBF,EAAQG,YACjC,6BAAKH,EAAQI,SACb,6BAAI,wBAAQC,QAASJ,EAAjB,0BCiCKK,EAtCI,SAACX,GAClB,IAAOY,EAAuEZ,EAAvEY,MAAOC,EAAgEb,EAAhEa,MAAOC,EAAyDd,EAAzDc,IAAKC,EAAoDf,EAApDe,SAAUC,EAA0ChB,EAA1CgB,YAAaC,EAA6BjB,EAA7BiB,YAAaC,EAAgBlB,EAAhBkB,aAC5D,OACI,sBAAKC,UAAU,cAAf,UACE,6CACA,uBAAMJ,SAAUA,EAAUK,aAAa,MAAvC,UACE,+CACE,uBACEnB,KAAK,OACLoB,MAAOT,EACPU,KAAK,YACLpB,SAAYc,EACZb,YAAY,wBAGhB,8CACE,uBACEF,KAAK,OACLoB,MAAOR,EACPS,KAAK,WACLpB,SAAYe,EACZd,YAAY,uBAGhB,iDACE,uBAAOF,KAAK,OACRoB,MAAOP,EACPQ,KAAK,SACLpB,SAAYgB,EACZf,YAAY,0BAGlB,wBAAQF,KAAK,SAAb,gC,gBCxBNsB,EAAU,gBAsBD,EApBA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAkBpB,EAfA,SAAAC,GAEX,OADgBL,IAAMM,KAAKP,EAAQM,GACpBH,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAapB,EAVO,SAAAG,GAClB,OAAOP,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BQ,KASvB,EANO,SAACA,EAAGE,GAEtB,OADgBT,IAAMU,IAAN,UAAaX,EAAb,YAAwBQ,GAAKE,GAC9BP,MAAK,SAAAC,GAAG,OAAGA,EAAIC,SChBnBO,EAXM,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,aACnB,OAAqB,OAAjBA,EACO,KAGH,qBAAKjB,UAAWiB,EAAanC,KAA7B,SACKmC,EAAaC,WC2IfC,MA1If,WACE,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8CF,mBAAS,IAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KACA,EAAkCJ,mBAAS,IAA3C,mBAAOhC,EAAP,KAAkBqC,EAAlB,KACA,EAAgCL,mBAAS,IAAzC,mBAAO/B,EAAP,KAAiBqC,EAAjB,KACA,EAA4BN,mBAAS,IAArC,mBAAO9B,EAAP,KAAeqC,EAAf,KACA,EAAwCP,mBAAS,MAAjD,mBAAOH,EAAP,KAAqBW,EAArB,KAEAC,qBAAU,WACRC,IAEGvB,MAAK,SAAAwB,GACJT,EAAYS,GACZP,EAAmBO,QAEvB,IAEF,IAYMC,EAAY,WAChBP,EAAa,IACbC,EAAY,IACZC,EAAU,KAGNM,EAAa,SAACf,GAA2B,IAAnBpC,EAAkB,uDAAb,UAC/B8C,EAAgB,CAAEV,UAASpC,SAC3BoD,YAAW,WAAON,EAAgB,QAAQ,MAyD5C,OACE,sBAAK5B,UAAU,YAAf,UACE,uDACA,uBAAMA,UAAU,OAAhB,UACI,cAAC,EAAD,CACEP,MAASL,EACTM,MAASL,EACTM,IAAOL,EACPM,SA9DS,SAACuC,GAGlB,GAFAA,EAAMC,iBAEW,KAAdhD,GAAiC,KAAbC,EACrB,OAAOgD,OAAOC,MAAM,sCAEtB,IAAMxB,EAAa,CACjB1B,UAAWA,EACXC,SAAUA,EACVC,OAAQA,GAGJiD,EAAQlB,EAASmB,MAAK,SAAAtD,GAAO,OAAIA,EAAQE,YAAa0B,EAAW1B,WAAaF,EAAQG,WAAayB,EAAWzB,YACpH,GAAGkD,EAAM,CACP,IAAM3B,EAAG2B,EAAM3B,GACZyB,OAAOI,QAAP,UAAkB3B,EAAW1B,UAA7B,YAA0C0B,EAAWzB,SAArD,+EACDyC,EACelB,EAAGE,GACjBP,MAAK,SAAAmC,GACF,IAAMC,EAAkBtB,EAASuB,KAAI,SAAA1D,GAAO,OAAIA,EAAQ0B,KAAOA,EAAI1B,EAAUwD,KAC7EpB,EAAYqB,GACZnB,EAAmBmB,GACnBV,EAAW,2BAAD,OAA4BS,EAAgBtD,UAA5C,YAAyDsD,EAAgBrD,SAAzE,mBAGd2C,SAGFF,EACUhB,GACPP,MAAK,SAAAsC,GACJvB,EAAYuB,GACZrB,EAAmBqB,GACnBZ,EAAW,GAAD,OAAInB,EAAW1B,UAAf,YAA4B0B,EAAWzB,SAAvC,8BAEXyD,OAAM,SAAAC,GAAK,OAAId,EAAWc,EAAMC,SAASvC,KAAK,YAC/CuB,KA2BInC,YAtFgB,SAAAsC,GAAK,OAAGV,EAAaU,EAAMc,OAAO/C,QAuFlDJ,YAtFgB,SAAAqC,GAAK,OAAGT,EAAYS,EAAMc,OAAO/C,QAuFjDH,aAtFiB,SAAAoC,GAAK,OAAGR,EAAUQ,EAAMc,OAAO/C,UAyFpD,sBAAKF,UAAY,eAAjB,UACG,cAAC,EAAD,CAAWjB,SAxFE,SAACoD,GACrB,IAAIe,EAAcf,EAAMc,OAAO/C,MAAMiD,cACrC3B,EAAmBH,EAAS+B,QAAO,SAAAlE,GAEjC,OADiBA,EAAQE,UAAY,IAAKF,EAAQG,UAClC8D,cAAcE,SAASH,UAqFnC,cAAC,EAAD,CAAcjC,aAAgBA,IAC9B,uBAAOL,GAAG,qBAAV,SACE,kCACE,+BACE,sCACA,uCACA,0BAEDW,EAAgBqB,KAAI,SAAA1D,GAAO,OAC1B,cAAC,EAAD,CAEEA,QAASA,EACTC,cAAiB,kBA1CT,SAAAyB,GACtB,GAAGyB,OAAOI,QAAP,4DAA2E,CAC5EX,EACiBlB,GACdkC,OAAM,SAAAC,GACL,IAAMO,EAAiBjC,EAASmB,MAAK,SAAAtD,GAAO,OAAIA,EAAQ0B,KAAOA,KAC/DqB,EAAW,kBAAD,OAAmBqB,EAAelE,UAAlC,YAA+CkE,EAAejE,SAA9D,yCAA8G,YAE5H,IAAMkE,EAAsBlC,EAAS+B,QAAO,SAAAlE,GAAO,OAAIA,EAAQ0B,KAAOA,KACtEU,EAAYiC,GACZ/B,EAAmB+B,IAgCeC,CAAgBtE,EAAQ0B,MAFzC1B,EAAQ0B,YAQrB,oBAAGZ,UAAU,gBAAb,gCACqB,uBAAMA,UAAU,qBAAhB,UAAsCqB,EAASoC,OAA/C,OADrB,qBAKJ,wBAAQzD,UAAU,WAAlB,sDCtIN0D,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.409a9933.chunk.js","sourcesContent":["const SearchBar = (props) =>{\r\n    return (\r\n        <input \r\n            type='text'\r\n            onChange = {props.onChange} \r\n            placeholder = 'Search contact'\r\n        />\r\n    )\r\n}\r\nexport default SearchBar\r\n","\r\nconst Contact = ({contact, deleteContact}) =>{\r\n  return(\r\n    <tr>\r\n      <td>{contact.firstName} {contact.lastName}</td>\r\n      <td>{contact.number}</td>\r\n      <td><button onClick={deleteContact}>Delete</button></td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport default Contact","\r\nconst AddContact = (props) =>{\r\n  const {fname, lname, num, onSubmit, handleFname, handleLname, handleNumber} = props\r\n    return(\r\n        <div className='new-contact'>\r\n          <h3>new contact</h3>\r\n          <form onSubmit={onSubmit} autoComplete=\"off\">\r\n            <label>First name\r\n              <input \r\n                type='text' \r\n                value={fname}\r\n                name='firstName'\r\n                onChange = {handleFname} \r\n                placeholder='Enter first name'\r\n              />\r\n            </label>  \r\n            <label>Last name\r\n              <input \r\n                type='text' \r\n                value={lname}\r\n                name='lastName'\r\n                onChange = {handleLname} \r\n                placeholder='Enter last name'\r\n              />\r\n            </label>    \r\n            <label>Phone number\r\n              <input type='text' \r\n                  value={num}\r\n                  name='number'\r\n                  onChange = {handleNumber} \r\n                  placeholder='Enter phone number'\r\n            />\r\n            </label>\r\n            <button type='submit'>Add contact</button>\r\n          </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddContact","import axios from \"axios\";\r\n\r\n//frontend only\r\n//const baseUrl = 'http://localhost:3001/contacts'\r\n\r\n//frontend access data from backend\r\n//const baseUrl = 'http://localhost:3001/api/contacts'\r\n\r\n//to build and copy frontend to backend folder\r\nconst baseUrl = '/api/contacts'\r\n\r\nconst getAll = () =>{\r\n    const request = axios.get(baseUrl)\r\n    return request.then(res => res.data)\r\n}\r\n\r\nconst create = newObj =>{\r\n    const request = axios.post(baseUrl,newObj)\r\n    return request.then(res => res.data)\r\n}\r\n\r\nconst deleteContact = id =>{\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst updateContact = (id,newContact) =>{\r\n    const request = axios.put(`${baseUrl}/${id}`,newContact)\r\n    return request.then(res =>res.data)\r\n\r\n}\r\n// eslint-disable-next-line\r\nexport default {getAll, create, deleteContact, updateContact}","const Notification = ({notification}) =>{\r\n    if (notification === null)\r\n        return null\r\n    else\r\n        return (\r\n            <div className={notification.type}>\r\n                {notification.message}\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from \"react\";\nimport SearchBar from \"./components/SearchBar\";\nimport Contact from \"./components/Contact\";\nimport AddContact from \"./components/AddContact\";\nimport contactsService from \"./services/contacts\";\nimport Notification from \"./components/Notification\";\n\nfunction App() {\n  const [contacts, setContacts] = useState([])\n  const [displayContacts, setDisplayContacts] = useState([])\n  const [firstName, setFirstName] = useState('')\n  const [lastName, setLastName] = useState('')\n  const [number, setNumber] = useState('')\n  const [notification, setNotification] = useState(null)\n\n  useEffect(() =>{\n    contactsService\n      .getAll()\n      .then(initialContacts => {\n        setContacts(initialContacts)\n        setDisplayContacts(initialContacts)\n      })\n  },[])\n\n  const handleFnameChange = event =>setFirstName(event.target.value)\n  const handleLnameChange = event =>setLastName(event.target.value)\n  const handleNumberChange = event =>setNumber(event.target.value)\n\n  const searchContact = (event) =>{\n    let searchQuery = event.target.value.toLowerCase()\n    setDisplayContacts(contacts.filter(contact =>{\n      let fullName   = contact.firstName + ' '+ contact.lastName\n      return fullName.toLowerCase().includes(searchQuery)\n    }))\n  }\n\n  const resetForm = () =>{\n    setFirstName('')\n    setLastName('')\n    setNumber('') \n  }\n\n  const notifyText = (message,type='success') =>{\n    setNotification({ message, type })\n    setTimeout(() => {setNotification(null)}, 3000)\n  }\n\n  const addContact = (event) =>{\n    event.preventDefault()\n    //if no input data, alert then no adding to contacts array\n    if(firstName === '' || lastName === '')\n      return window.alert('Please enter all fields of contact')\n\n    const newContact = {\n      firstName: firstName,\n      lastName: lastName,\n      number: number\n    }\n    //check contact is already existed or not\n    const found = contacts.find(contact => contact.firstName ===newContact.firstName && contact.lastName === newContact.lastName)\n    if(found){\n      const id=found.id\n      if(window.confirm(`${newContact.firstName} ${newContact.lastName} is already existed in phonebook, replace the old number with the new one`)){\n        contactsService\n        .updateContact(id,newContact)\n        .then(returnedContact =>{ \n            const updatedContacts = contacts.map(contact => contact.id !== id? contact : returnedContact)\n            setContacts(updatedContacts)\n            setDisplayContacts(updatedContacts)   \n            notifyText(`The new phone number of ${returnedContact.firstName} ${returnedContact.lastName} is updated`)  \n        })\n      }\n        resetForm()\n    }      \n    else{\n      contactsService\n        .create(newContact)\n        .then(returnedContacts =>{\n          setContacts(returnedContacts);\n          setDisplayContacts(returnedContacts);\n          notifyText(`${newContact.firstName} ${newContact.lastName} is added to phonebook`)\n        })\n        .catch(error => notifyText(error.response.data,'error'))\n        resetForm()  \n    }\n  }\n\n  const deleteContactOf = id =>{\n    if(window.confirm(`Do you really want to delete this contact from phonebook`)){\n      contactsService\n        .deleteContact(id)\n        .catch(error =>{\n          const DeletedContact = contacts.find(contact => contact.id === id)\n          notifyText(`Information of ${DeletedContact.firstName} ${DeletedContact.lastName} has already been removed from server`,'error')\n        })\n      const afterDeleteContacts = contacts.filter(contact => contact.id !== id)\n      setContacts(afterDeleteContacts)\n      setDisplayContacts(afterDeleteContacts)\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <header>Awesome phonebook</header>\n      <main className='main'>\n        { <AddContact \n            fname = {firstName}\n            lname = {lastName}\n            num = {number}\n            onSubmit= {addContact} \n            handleFname={handleFnameChange}\n            handleLname = {handleLnameChange}\n            handleNumber = {handleNumberChange}\n        />\n        }\n        <div className = 'contact-list'>\n          {<SearchBar onChange={searchContact}/> }\n          <Notification notification = {notification} />\n          <table id='table-contact-list'>\n            <tbody>\n              <tr>\n                <th>Name</th>\n                <th>Phone</th>\n                <th></th>\n              </tr>\n              {displayContacts.map(contact =>\n                <Contact \n                  key={contact.id} \n                  contact={contact}\n                  deleteContact = {() =>deleteContactOf(contact.id)}\n                  />\n              )}\n            </tbody>\n          </table>\n          \n          <p className='subtitle left'>\n            This phone book has<span className='number-of-contacts'>{contacts.length} </span> contacts\n          </p>\n        </div>\n      </main>\n      <footer className='subtitle'>Awesome Phonebook@Hang Nguyen - 2021</footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root')\n)"],"sourceRoot":""}